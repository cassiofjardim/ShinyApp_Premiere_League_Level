library(tidyverse)
library(shinyWidgets)
library(highcharter)
library(scales)


colors <- alpha(c("#6CADDF", "#C8102E", "#034694", "#132257", "#EF0107",
                  "#E03A3E", "#7A263A", "#0053A0", "#0057B8", "#FDB913",
                  "#241F20", "#1B458F", "#F5A3C7", "#95BFE5", "#D71920",
                  "#274488", "#FFCD00", "#6C1D45", "#FBEE23", "#00A650"),.5)

main_league_df <- read.csv(file = 'www/database_sql/main_league_df.csv') %>%
  select(-X.1,-X)

data_csv_file <- read.csv(file = 'www/database_sql/main_league_df.csv')

metrics_and_definitions_df <- tibble(metrics = main_league_df %>% select(Rk:last_col()) %>% names())

squad_metric <- 'Squad'
champion_team <- main_league_df %>% filter(Rk == 1) %>% select(Squad) %>% pull
team_color_champion <- main_league_df %>%filter(Rk == 1) %>% select(Cores) %>% pull
player_top_scorer <- main_league_df %>% filter(Rk == 1) %>% select(Top.Team.Scorer) %>% pull

#*******************************************************************************
#**********************Treemap League Level Dashboard **************************
#*******************************************************************************
standard_metrics <- c("xG" , "xGA", "xGD" , "xGD.90")
passing_metrics <- c("xAG","xA","A_minus_xAG","KP")
possession_metrics <- c("Touches_Touches","Def.Pen_Touches","Def.3rd_Touches",
                        "Mid.3rd_Touches")
misc_metrics <- c("Mis_Carries", "Dis_Carries","Rec_Receiving","PrgR_Receiving")

#*******************************************************************************
#********************* League Level Championship Dashboard *********************
#*#*****************************************************************************


metrics_introduction <- c('MP','Pts', 'W', 'L', 'Age','Gls', 'xG', 'xGA', 'Poss', 'Ast', 'xA',
                          'KP','Cmp_percent_Total','Cmp_percent_Short', 'Cmp_percent_Medium',
                          'Cmp_percent_Long', 'PPA',   'Top.Team.Scorer')

definition <- c('Games','Pts', 'Win', 'Lost', 'Average Age','Goals', 'Exp. Goals(xG)',
                'Exp. Goals Against(xGA)','Ball Poss.', 'Assists', 'Exp. Assist.(xA)',
                'Key Passings','Completed Passes (%)','Short Passings (%)',
                'Medium Passings (%)', 'Long Passings (%)', 'Passings - Pen. Area',
                'Top Team Scorer')


#************
#*** Stacked Bar Chart
#************
standard_metrics_championship_bar_1 <- 'xG'
standard_metrics_championship_bar_2 <- 'xGA'




#************
#*** Scatter Plot
#************
# scatter_plot_1 <- paste0(standard_metrics_league_level_bar_1,'_std')
# scatter_plot_2 <- paste0(standard_metrics_league_level_bar_1,'_std')

#************
#*** TabPanels Metrics
#************
tabpanel_championship_metrics <- c('xG_std','xGA_std', 'xGD.90_std', 'xG_Home_std', 'xG_Away_std',
                                   'xG_Per_Minutes_std', 'Won_percent_Aerial_Duels')

tabpanel_championship_titles <- c('xG - Standardized', 'xGA - Standardized', 'xGD.90 - Standardized',
                                  'xG_Home - Standardized', 'xG_Away - Standardized', 'xG Per. Minutes - Standardized',
                                  'Aerials Duels Won (%)')

table_championship_vector <- main_league_df %>% select(Squad:Attendance,-Pts.MP,-Team_or_Opponent) %>% names()
#*******************************************************************************
#********************* League Level Complete - Dashoboard  *********************
#*#*****************************************************************************

#***********************************
#***** league_level module
#***********************************

metrics_introduction_top <- c('MP','Pts', 'Gls', 'xG', 'xGA', 'Poss', 'Ast',
                              'KP','PPA',   'Top.Team.Scorer')

table_displayed <- main_league_df %>%  select(Squad:Attendance)%>%  arrange(Rk)

#***********************************
#***** top_right module
#***********************************
#* radio metrics options

tabpanels_top_module <- c("Standard League - Stats",
                          "Passing League - Stats", "Possession League - Stats","Misc - Stats")

#* metrics options
standard_metrics_top <- c("xG" , "xGA", "xGD" , "xGD.90")
passing_metrics_top <- c("xAG","xA","A_minus_xAG","KP","Final_Third","PPA", "CrsPA",  "PrgP")
possession_metrics_top <- c("Touches_Touches","Def.Pen_Touches","Def.3rd_Touches",
                            "Mid.3rd_Touches","Att.3rd_Touches","Att.Pen_Touches","Live_Touches")
misc_metrics_top <- c("Mis_Carries", "Dis_Carries","Rec_Receiving","PrgR_Receiving")


#***********************************
#***** bottom_right module
#***********************************



#*************************
#***** CHATGPT TABPANELS *
#*************************
metrics <- list(
  standard = paste0(standard_metrics_top,"_std"),
  passing = paste0(passing_metrics_top,"_std"),
  possession = paste0(possession_metrics_top,"_std"),
  misc = paste0(misc_metrics_top,"_std")
)


metrics_names <- c(xG_std = "Expected goals",
                   xGA_std = "Expected goals against",
                   xGD_std = "Expected goal difference",
                   xGD.90_std = "Expected goal difference per 90 minutes",
                   xAG_std = "Expected assists",
                   xA_std = "Expected goals assisted",
                   A_minus_xAG_std = "Difference between actual assists and expected assists",
                   KP_std = "Key passes",
                   Final_Third_std = "Touches in the opposition final third",
                   PPA_std = "Passes into the penalty area",
                   CrsPA_std = "Crosses into the penalty area",
                   PrgP_std = "Progressive passes",
                   Touches_Touches_std = "Total number of touches",
                   Def.Pen_Touches_std = "Touches in the defensive penalty area",
                   Def.3rd_Touches_std = "Touches in the defensive third",
                   Mid.3rd_Touches_std = "Touches in the middle third",
                   Att.3rd_Touches_std = "Touches in the attacking third",
                   Att.Pen_Touches_std = "Touches in the attacking penalty area",
                   Live_Touches_std = "Touches in open play",
                   Mis_Carries_std = "Miscontrols leading to lost possession",
                   Dis_Carries_std = "Times dispossessed",
                   Rec_Receiving_std = "Successful passes received in the final third",
                   PrgR_Receiving_std = "Progressive passes received")
#
metrics_meanings <- c(xG_std = "Expected goals: the sum of the probabilities of each shot being scored based on factors such as shot distance, angle, and type.",
                      xGA_std = "Expected goals against: the sum of the probabilities of each shot against the team being scored based on factors such as shot distance, angle, and type.",
                      xGD_std = "Expected goal difference: the difference between a team's expected goals and their opponents' expected goals.",
                      xGD.90_std = "Expected goal difference per 90 minutes: the expected goal difference per 90 minutes played.",
                      xAG_std = "Expected assists: the sum of the probabilities of each pass being an assist based on factors such as pass length, location, and type.",
                      xA_std = "Expected goals assisted: the sum of the probabilities of each player's passes leading to a goal based on factors such as pass length, location, and type.",
                      A_minus_xAG_std = "Difference between actual assists and expected assists: the difference between the actual number of assists a player has and the expected number of assists based on the quality of their passes.",
                      KP_std = "Key passes: passes that lead to a shot (excluding crosses and corners).",
                      Final_Third_std = "Touches in the opposition final third: the number of times a player touches the ball in the opposition's final third.",
                      PPA_std = "Passes into the penalty area: the number of passes a player makes into the opposition penalty area.",
                      CrsPA_std = "Crosses into the penalty area: the number of crosses a player makes into the opposition penalty area.",
                      PrgP_std = "Progressive passes: passes that move the ball significantly closer to the opponent's goal.",
                      Touches_Touches_std = "Total number of touches: the number of times a player touches the ball.",
                      Def.Pen_Touches_std = "Touches in the defensive penalty area: the number of times a player touches the ball in their own penalty area.",
                      Def.3rd_Touches_std = "Touches in the defensive third: the number of times a player touches the ball in their own defensive third.",
                      Mid.3rd_Touches_std = "Touches in the middle third: the number of times a player touches the ball in the middle third of the pitch.",
                      Att.3rd_Touches_std = "Touches in the attacking third: the number of times a player touches the ball in the opposition's attacking third.",
                      Att.Pen_Touches_std = "Touches in the attacking penalty area: the number of times a player touches the ball in the opposition's penalty area.",
                      Live_Touches_std = "Touches in open play: the number of times a player touches the ball in open play.",
                      Mis_Carries_std = "Miscontrols leading to lost possession: the number of times a player miscontrols the ball, leading to a lost possession.",
                      Dis_Carries_std = "Times dispossessed: the number of times a player is dispossessed by the opposition.",
                      Rec_Receiving_std = "Successful passes received in the final third: the number of successful passes a player receives in the opposition's final third.",
                      PrgR_Receiving_std = "Progressive passes received: the number of progressive passes a player receives.")
#
#
#
metrics_names_df <- metrics_names %>%
  as.data.frame() %>%
  rownames_to_column() %>%
  mutate(meanings = metrics_meanings) %>%
  separate(col = meanings,into = c('A','B'),sep = ':')

colnames(metrics_names_df) <- c('metrics_db','metrics_definition_remove','metrics_definition','metrics_concept')

metrics_names_df <- metrics_names_df %>% select(-metrics_definition_remove)


list_db_definition <- metrics_names %>% as.list()

list_db_concept <- metrics_meanings%>% as.list()
